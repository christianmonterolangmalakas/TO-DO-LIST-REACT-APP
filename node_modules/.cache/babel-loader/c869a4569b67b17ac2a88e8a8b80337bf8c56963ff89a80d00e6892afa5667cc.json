{"ast":null,"code":"var VanillaTilt = function () {\n  \"use strict\";\n\n  class VanillaTilt {\n    constructor(element, settings = {}) {\n      if (!(element instanceof Node)) {\n        throw \"Can't initialize VanillaTilt because \" + element + \" is not a Node.\";\n      }\n      this.width = null;\n      this.height = null;\n      this.clientWidth = null;\n      this.clientHeight = null;\n      this.left = null;\n      this.top = null;\n\n      // for Gyroscope sampling\n      this.gammazero = null;\n      this.betazero = null;\n      this.lastgammazero = null;\n      this.lastbetazero = null;\n      this.transitionTimeout = null;\n      this.updateCall = null;\n      this.event = null;\n      this.updateBind = this.update.bind(this);\n      this.resetBind = this.reset.bind(this);\n      this.element = element;\n      this.settings = this.extendSettings(settings);\n      this.reverse = this.settings.reverse ? -1 : 1;\n      this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\n      this.glarePrerender = VanillaTilt.isSettingTrue(this.settings[\"glare-prerender\"]);\n      this.fullPageListening = VanillaTilt.isSettingTrue(this.settings[\"full-page-listening\"]);\n      this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\n      this.gyroscopeSamples = this.settings.gyroscopeSamples;\n      this.elementListener = this.getElementListener();\n      if (this.glare) {\n        this.prepareGlare();\n      }\n      if (this.fullPageListening) {\n        this.updateClientSize();\n      }\n      this.addEventListeners();\n      this.reset();\n      this.updateInitialPosition();\n    }\n    static isSettingTrue(setting) {\n      return setting === \"\" || setting === true || setting === 1;\n    }\n\n    /**\r\n     * Method returns element what will be listen mouse events\r\n     * @return {Node}\r\n     */\n    getElementListener() {\n      if (this.fullPageListening) {\n        return window.document;\n      }\n      if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\n        const mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\n        if (mouseEventElement) {\n          return mouseEventElement;\n        }\n      }\n      if (this.settings[\"mouse-event-element\"] instanceof Node) {\n        return this.settings[\"mouse-event-element\"];\n      }\n      return this.element;\n    }\n\n    /**\r\n     * Method set listen methods for this.elementListener\r\n     * @return {Node}\r\n     */\n    addEventListeners() {\n      this.onMouseEnterBind = this.onMouseEnter.bind(this);\n      this.onMouseMoveBind = this.onMouseMove.bind(this);\n      this.onMouseLeaveBind = this.onMouseLeave.bind(this);\n      this.onWindowResizeBind = this.onWindowResize.bind(this);\n      this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\n      this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\n      this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\n      this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\n      if (this.glare || this.fullPageListening) {\n        window.addEventListener(\"resize\", this.onWindowResizeBind);\n      }\n      if (this.gyroscope) {\n        window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n      }\n    }\n\n    /**\r\n     * Method remove event listeners from current this.elementListener\r\n     */\n    removeEventListeners() {\n      this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\n      this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\n      this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\n      if (this.gyroscope) {\n        window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n      }\n      if (this.glare || this.fullPageListening) {\n        window.removeEventListener(\"resize\", this.onWindowResizeBind);\n      }\n    }\n    destroy() {\n      clearTimeout(this.transitionTimeout);\n      if (this.updateCall !== null) {\n        cancelAnimationFrame(this.updateCall);\n      }\n      this.reset();\n      this.removeEventListeners();\n      this.element.vanillaTilt = null;\n      delete this.element.vanillaTilt;\n      this.element = null;\n    }\n    onDeviceOrientation(event) {\n      if (event.gamma === null || event.beta === null) {\n        return;\n      }\n      this.updateElementPosition();\n      if (this.gyroscopeSamples > 0) {\n        this.lastgammazero = this.gammazero;\n        this.lastbetazero = this.betazero;\n        if (this.gammazero === null) {\n          this.gammazero = event.gamma;\n          this.betazero = event.beta;\n        } else {\n          this.gammazero = (event.gamma + this.lastgammazero) / 2;\n          this.betazero = (event.beta + this.lastbetazero) / 2;\n        }\n        this.gyroscopeSamples -= 1;\n      }\n      const totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\n      const totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\n      const degreesPerPixelX = totalAngleX / this.width;\n      const degreesPerPixelY = totalAngleY / this.height;\n      const angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\n      const angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\n      const posX = angleX / degreesPerPixelX;\n      const posY = angleY / degreesPerPixelY;\n      if (this.updateCall !== null) {\n        cancelAnimationFrame(this.updateCall);\n      }\n      this.event = {\n        clientX: posX + this.left,\n        clientY: posY + this.top\n      };\n      this.updateCall = requestAnimationFrame(this.updateBind);\n    }\n    onMouseEnter() {\n      this.updateElementPosition();\n      this.element.style.willChange = \"transform\";\n      this.setTransition();\n    }\n    onMouseMove(event) {\n      if (this.updateCall !== null) {\n        cancelAnimationFrame(this.updateCall);\n      }\n      this.event = event;\n      this.updateCall = requestAnimationFrame(this.updateBind);\n    }\n    onMouseLeave() {\n      this.setTransition();\n      if (this.settings.reset) {\n        requestAnimationFrame(this.resetBind);\n      }\n    }\n    reset() {\n      this.event = {\n        clientX: this.left + this.width / 2,\n        clientY: this.top + this.height / 2\n      };\n      if (this.element && this.element.style) {\n        this.element.style.transform = `perspective(${this.settings.perspective}px) ` + `rotateX(0deg) ` + `rotateY(0deg) ` + `scale3d(1, 1, 1)`;\n      }\n      this.resetGlare();\n    }\n    resetGlare() {\n      if (this.glare) {\n        this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\n        this.glareElement.style.opacity = \"0\";\n      }\n    }\n    updateInitialPosition() {\n      if (this.settings.startX === 0 && this.settings.startY === 0) {\n        return;\n      }\n      this.onMouseEnter();\n      if (this.fullPageListening) {\n        this.event = {\n          clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,\n          clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight\n        };\n      } else {\n        this.event = {\n          clientX: this.left + (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width,\n          clientY: this.top + (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height\n        };\n      }\n      let backupScale = this.settings.scale;\n      this.settings.scale = 1;\n      this.update();\n      this.settings.scale = backupScale;\n      this.resetGlare();\n    }\n    getValues() {\n      let x, y;\n      if (this.fullPageListening) {\n        x = this.event.clientX / this.clientWidth;\n        y = this.event.clientY / this.clientHeight;\n      } else {\n        x = (this.event.clientX - this.left) / this.width;\n        y = (this.event.clientY - this.top) / this.height;\n      }\n      x = Math.min(Math.max(x, 0), 1);\n      y = Math.min(Math.max(y, 0), 1);\n      let tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);\n      let tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);\n      let angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\n      return {\n        tiltX: tiltX,\n        tiltY: tiltY,\n        percentageX: x * 100,\n        percentageY: y * 100,\n        angle: angle\n      };\n    }\n    updateElementPosition() {\n      let rect = this.element.getBoundingClientRect();\n      this.width = this.element.offsetWidth;\n      this.height = this.element.offsetHeight;\n      this.left = rect.left;\n      this.top = rect.top;\n    }\n    update() {\n      let values = this.getValues();\n      this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" + \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" + \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" + \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\n      if (this.glare) {\n        this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`;\n        this.glareElement.style.opacity = `${values.percentageY * this.settings[\"max-glare\"] / 100}`;\n      }\n      this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\n        detail: values\n      }));\n      this.updateCall = null;\n    }\n\n    /**\r\n     * Appends the glare element (if glarePrerender equals false)\r\n     * and sets the default style\r\n     */\n    prepareGlare() {\n      // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\n      if (!this.glarePrerender) {\n        // Create glare element\n        const jsTiltGlare = document.createElement(\"div\");\n        jsTiltGlare.classList.add(\"js-tilt-glare\");\n        const jsTiltGlareInner = document.createElement(\"div\");\n        jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\n        jsTiltGlare.appendChild(jsTiltGlareInner);\n        this.element.appendChild(jsTiltGlare);\n      }\n      this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\n      this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\n      if (this.glarePrerender) {\n        return;\n      }\n      Object.assign(this.glareElementWrapper.style, {\n        position: \"absolute\",\n        top: \"0\",\n        left: \"0\",\n        width: \"100%\",\n        height: \"100%\",\n        overflow: \"hidden\",\n        \"pointer-events\": \"none\"\n      });\n      Object.assign(this.glareElement.style, {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        \"pointer-events\": \"none\",\n        \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\n        transform: \"rotate(180deg) translate(-50%, -50%)\",\n        \"transform-origin\": \"0% 0%\",\n        opacity: \"0\"\n      });\n      this.updateGlareSize();\n    }\n    updateGlareSize() {\n      if (this.glare) {\n        const glareSize = (this.element.offsetWidth > this.element.offsetHeight ? this.element.offsetWidth : this.element.offsetHeight) * 2;\n        Object.assign(this.glareElement.style, {\n          width: `${glareSize}px`,\n          height: `${glareSize}px`\n        });\n      }\n    }\n    updateClientSize() {\n      this.clientWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      this.clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    }\n    onWindowResize() {\n      this.updateGlareSize();\n      this.updateClientSize();\n    }\n    setTransition() {\n      clearTimeout(this.transitionTimeout);\n      this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\n      if (this.glare) this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${this.settings.easing}`;\n      this.transitionTimeout = setTimeout(() => {\n        this.element.style.transition = \"\";\n        if (this.glare) {\n          this.glareElement.style.transition = \"\";\n        }\n      }, this.settings.speed);\n    }\n\n    /**\r\n     * Method return patched settings of instance\r\n     * @param {boolean} settings.reverse - reverse the tilt direction\r\n     * @param {number} settings.max - max tilt rotation (degrees)\r\n     * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\r\n     * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\r\n     * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\r\n     * @param {string} settings.easing - Easing on enter/exit\r\n     * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\r\n     * @param {number} settings.speed - Speed of the enter/exit transition\r\n     * @param {boolean} settings.transition - Set a transition on enter/exit\r\n     * @param {string|null} settings.axis - What axis should be disabled. Can be X or Y\r\n     * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\r\n     * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n     * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\r\n     * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\r\n     * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\r\n     * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\r\n     * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\r\n     * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\r\n     * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\r\n     */\n    extendSettings(settings) {\n      let defaultSettings = {\n        reverse: false,\n        max: 15,\n        startX: 0,\n        startY: 0,\n        perspective: 1000,\n        easing: \"cubic-bezier(.03,.98,.52,.99)\",\n        scale: 1,\n        speed: 300,\n        transition: true,\n        axis: null,\n        glare: false,\n        \"max-glare\": 1,\n        \"glare-prerender\": false,\n        \"full-page-listening\": false,\n        \"mouse-event-element\": null,\n        reset: true,\n        gyroscope: true,\n        gyroscopeMinAngleX: -45,\n        gyroscopeMaxAngleX: 45,\n        gyroscopeMinAngleY: -45,\n        gyroscopeMaxAngleY: 45,\n        gyroscopeSamples: 10\n      };\n      let newSettings = {};\n      for (var property in defaultSettings) {\n        if (property in settings) {\n          newSettings[property] = settings[property];\n        } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\n          let attribute = this.element.getAttribute(\"data-tilt-\" + property);\n          try {\n            newSettings[property] = JSON.parse(attribute);\n          } catch (e) {\n            newSettings[property] = attribute;\n          }\n        } else {\n          newSettings[property] = defaultSettings[property];\n        }\n      }\n      return newSettings;\n    }\n    static init(elements, settings) {\n      if (elements instanceof Node) {\n        elements = [elements];\n      }\n      if (elements instanceof NodeList) {\n        elements = [].slice.call(elements);\n      }\n      if (!(elements instanceof Array)) {\n        return;\n      }\n      elements.forEach(element => {\n        if (!(\"vanillaTilt\" in element)) {\n          element.vanillaTilt = new VanillaTilt(element, settings);\n        }\n      });\n    }\n  }\n  if (typeof document !== \"undefined\") {\n    /* expose the class to window */\n    window.VanillaTilt = VanillaTilt;\n\n    /**\r\n     * Auto load\r\n     */\n    VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\n  }\n  return VanillaTilt;\n}();","map":{"version":3,"names":["VanillaTilt","constructor","element","settings","Node","width","height","clientWidth","clientHeight","left","top","gammazero","betazero","lastgammazero","lastbetazero","transitionTimeout","updateCall","event","updateBind","update","bind","resetBind","reset","extendSettings","reverse","glare","isSettingTrue","glarePrerender","fullPageListening","gyroscope","gyroscopeSamples","elementListener","getElementListener","prepareGlare","updateClientSize","addEventListeners","updateInitialPosition","setting","window","document","mouseEventElement","querySelector","onMouseEnterBind","onMouseEnter","onMouseMoveBind","onMouseMove","onMouseLeaveBind","onMouseLeave","onWindowResizeBind","onWindowResize","onDeviceOrientationBind","onDeviceOrientation","addEventListener","removeEventListeners","removeEventListener","destroy","clearTimeout","cancelAnimationFrame","vanillaTilt","gamma","beta","updateElementPosition","totalAngleX","gyroscopeMaxAngleX","gyroscopeMinAngleX","totalAngleY","gyroscopeMaxAngleY","gyroscopeMinAngleY","degreesPerPixelX","degreesPerPixelY","angleX","angleY","posX","posY","clientX","clientY","requestAnimationFrame","style","willChange","setTransition","transform","perspective","resetGlare","glareElement","opacity","startX","startY","max","backupScale","scale","getValues","x","y","Math","min","tiltX","toFixed","tiltY","angle","atan2","PI","percentageX","percentageY","rect","getBoundingClientRect","offsetWidth","offsetHeight","values","axis","dispatchEvent","CustomEvent","detail","jsTiltGlare","createElement","classList","add","jsTiltGlareInner","appendChild","glareElementWrapper","Object","assign","position","overflow","updateGlareSize","glareSize","innerWidth","documentElement","body","innerHeight","transition","speed","easing","setTimeout","defaultSettings","newSettings","property","hasAttribute","attribute","getAttribute","JSON","parse","e","init","elements","NodeList","slice","call","Array","forEach","querySelectorAll"],"sources":["C:/Users/roger/OneDrive/Documents/project/.vscode/vite-project/myreactapp/src/vanilla-tilt.js"],"sourcesContent":["var VanillaTilt = (function () {\r\n  \"use strict\";\r\n\r\n  class VanillaTilt {\r\n    constructor(element, settings = {}) {\r\n      if (!(element instanceof Node)) {\r\n        throw (\r\n          \"Can't initialize VanillaTilt because \" + element + \" is not a Node.\"\r\n        );\r\n      }\r\n\r\n      this.width = null;\r\n      this.height = null;\r\n      this.clientWidth = null;\r\n      this.clientHeight = null;\r\n      this.left = null;\r\n      this.top = null;\r\n\r\n      // for Gyroscope sampling\r\n      this.gammazero = null;\r\n      this.betazero = null;\r\n      this.lastgammazero = null;\r\n      this.lastbetazero = null;\r\n\r\n      this.transitionTimeout = null;\r\n      this.updateCall = null;\r\n      this.event = null;\r\n\r\n      this.updateBind = this.update.bind(this);\r\n      this.resetBind = this.reset.bind(this);\r\n\r\n      this.element = element;\r\n      this.settings = this.extendSettings(settings);\r\n\r\n      this.reverse = this.settings.reverse ? -1 : 1;\r\n      this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\r\n      this.glarePrerender = VanillaTilt.isSettingTrue(\r\n        this.settings[\"glare-prerender\"]\r\n      );\r\n      this.fullPageListening = VanillaTilt.isSettingTrue(\r\n        this.settings[\"full-page-listening\"]\r\n      );\r\n      this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\r\n      this.gyroscopeSamples = this.settings.gyroscopeSamples;\r\n\r\n      this.elementListener = this.getElementListener();\r\n\r\n      if (this.glare) {\r\n        this.prepareGlare();\r\n      }\r\n\r\n      if (this.fullPageListening) {\r\n        this.updateClientSize();\r\n      }\r\n\r\n      this.addEventListeners();\r\n      this.reset();\r\n      this.updateInitialPosition();\r\n    }\r\n\r\n    static isSettingTrue(setting) {\r\n      return setting === \"\" || setting === true || setting === 1;\r\n    }\r\n\r\n    /**\r\n     * Method returns element what will be listen mouse events\r\n     * @return {Node}\r\n     */\r\n    getElementListener() {\r\n      if (this.fullPageListening) {\r\n        return window.document;\r\n      }\r\n\r\n      if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\r\n        const mouseEventElement = document.querySelector(\r\n          this.settings[\"mouse-event-element\"]\r\n        );\r\n\r\n        if (mouseEventElement) {\r\n          return mouseEventElement;\r\n        }\r\n      }\r\n\r\n      if (this.settings[\"mouse-event-element\"] instanceof Node) {\r\n        return this.settings[\"mouse-event-element\"];\r\n      }\r\n\r\n      return this.element;\r\n    }\r\n\r\n    /**\r\n     * Method set listen methods for this.elementListener\r\n     * @return {Node}\r\n     */\r\n    addEventListeners() {\r\n      this.onMouseEnterBind = this.onMouseEnter.bind(this);\r\n      this.onMouseMoveBind = this.onMouseMove.bind(this);\r\n      this.onMouseLeaveBind = this.onMouseLeave.bind(this);\r\n      this.onWindowResizeBind = this.onWindowResize.bind(this);\r\n      this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\r\n\r\n      this.elementListener.addEventListener(\r\n        \"mouseenter\",\r\n        this.onMouseEnterBind\r\n      );\r\n      this.elementListener.addEventListener(\r\n        \"mouseleave\",\r\n        this.onMouseLeaveBind\r\n      );\r\n      this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\r\n\r\n      if (this.glare || this.fullPageListening) {\r\n        window.addEventListener(\"resize\", this.onWindowResizeBind);\r\n      }\r\n\r\n      if (this.gyroscope) {\r\n        window.addEventListener(\r\n          \"deviceorientation\",\r\n          this.onDeviceOrientationBind\r\n        );\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Method remove event listeners from current this.elementListener\r\n     */\r\n    removeEventListeners() {\r\n      this.elementListener.removeEventListener(\r\n        \"mouseenter\",\r\n        this.onMouseEnterBind\r\n      );\r\n      this.elementListener.removeEventListener(\r\n        \"mouseleave\",\r\n        this.onMouseLeaveBind\r\n      );\r\n      this.elementListener.removeEventListener(\r\n        \"mousemove\",\r\n        this.onMouseMoveBind\r\n      );\r\n\r\n      if (this.gyroscope) {\r\n        window.removeEventListener(\r\n          \"deviceorientation\",\r\n          this.onDeviceOrientationBind\r\n        );\r\n      }\r\n\r\n      if (this.glare || this.fullPageListening) {\r\n        window.removeEventListener(\"resize\", this.onWindowResizeBind);\r\n      }\r\n    }\r\n\r\n    destroy() {\r\n      clearTimeout(this.transitionTimeout);\r\n      if (this.updateCall !== null) {\r\n        cancelAnimationFrame(this.updateCall);\r\n      }\r\n\r\n      this.reset();\r\n\r\n      this.removeEventListeners();\r\n      this.element.vanillaTilt = null;\r\n      delete this.element.vanillaTilt;\r\n\r\n      this.element = null;\r\n    }\r\n\r\n    onDeviceOrientation(event) {\r\n      if (event.gamma === null || event.beta === null) {\r\n        return;\r\n      }\r\n\r\n      this.updateElementPosition();\r\n\r\n      if (this.gyroscopeSamples > 0) {\r\n        this.lastgammazero = this.gammazero;\r\n        this.lastbetazero = this.betazero;\r\n\r\n        if (this.gammazero === null) {\r\n          this.gammazero = event.gamma;\r\n          this.betazero = event.beta;\r\n        } else {\r\n          this.gammazero = (event.gamma + this.lastgammazero) / 2;\r\n          this.betazero = (event.beta + this.lastbetazero) / 2;\r\n        }\r\n\r\n        this.gyroscopeSamples -= 1;\r\n      }\r\n\r\n      const totalAngleX =\r\n        this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\r\n      const totalAngleY =\r\n        this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\r\n\r\n      const degreesPerPixelX = totalAngleX / this.width;\r\n      const degreesPerPixelY = totalAngleY / this.height;\r\n\r\n      const angleX =\r\n        event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\r\n      const angleY =\r\n        event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\r\n\r\n      const posX = angleX / degreesPerPixelX;\r\n      const posY = angleY / degreesPerPixelY;\r\n\r\n      if (this.updateCall !== null) {\r\n        cancelAnimationFrame(this.updateCall);\r\n      }\r\n\r\n      this.event = {\r\n        clientX: posX + this.left,\r\n        clientY: posY + this.top,\r\n      };\r\n\r\n      this.updateCall = requestAnimationFrame(this.updateBind);\r\n    }\r\n\r\n    onMouseEnter() {\r\n      this.updateElementPosition();\r\n      this.element.style.willChange = \"transform\";\r\n      this.setTransition();\r\n    }\r\n\r\n    onMouseMove(event) {\r\n      if (this.updateCall !== null) {\r\n        cancelAnimationFrame(this.updateCall);\r\n      }\r\n\r\n      this.event = event;\r\n      this.updateCall = requestAnimationFrame(this.updateBind);\r\n    }\r\n\r\n    onMouseLeave() {\r\n      this.setTransition();\r\n\r\n      if (this.settings.reset) {\r\n        requestAnimationFrame(this.resetBind);\r\n      }\r\n    }\r\n\r\n    reset() {\r\n      this.event = {\r\n        clientX: this.left + this.width / 2,\r\n        clientY: this.top + this.height / 2,\r\n      };\r\n\r\n      if (this.element && this.element.style) {\r\n        this.element.style.transform =\r\n          `perspective(${this.settings.perspective}px) ` +\r\n          `rotateX(0deg) ` +\r\n          `rotateY(0deg) ` +\r\n          `scale3d(1, 1, 1)`;\r\n      }\r\n\r\n      this.resetGlare();\r\n    }\r\n\r\n    resetGlare() {\r\n      if (this.glare) {\r\n        this.glareElement.style.transform =\r\n          \"rotate(180deg) translate(-50%, -50%)\";\r\n        this.glareElement.style.opacity = \"0\";\r\n      }\r\n    }\r\n\r\n    updateInitialPosition() {\r\n      if (this.settings.startX === 0 && this.settings.startY === 0) {\r\n        return;\r\n      }\r\n\r\n      this.onMouseEnter();\r\n\r\n      if (this.fullPageListening) {\r\n        this.event = {\r\n          clientX:\r\n            ((this.settings.startX + this.settings.max) /\r\n              (2 * this.settings.max)) *\r\n            this.clientWidth,\r\n          clientY:\r\n            ((this.settings.startY + this.settings.max) /\r\n              (2 * this.settings.max)) *\r\n            this.clientHeight,\r\n        };\r\n      } else {\r\n        this.event = {\r\n          clientX:\r\n            this.left +\r\n            ((this.settings.startX + this.settings.max) /\r\n              (2 * this.settings.max)) *\r\n              this.width,\r\n          clientY:\r\n            this.top +\r\n            ((this.settings.startY + this.settings.max) /\r\n              (2 * this.settings.max)) *\r\n              this.height,\r\n        };\r\n      }\r\n\r\n      let backupScale = this.settings.scale;\r\n      this.settings.scale = 1;\r\n      this.update();\r\n      this.settings.scale = backupScale;\r\n      this.resetGlare();\r\n    }\r\n\r\n    getValues() {\r\n      let x, y;\r\n\r\n      if (this.fullPageListening) {\r\n        x = this.event.clientX / this.clientWidth;\r\n        y = this.event.clientY / this.clientHeight;\r\n      } else {\r\n        x = (this.event.clientX - this.left) / this.width;\r\n        y = (this.event.clientY - this.top) / this.height;\r\n      }\r\n\r\n      x = Math.min(Math.max(x, 0), 1);\r\n      y = Math.min(Math.max(y, 0), 1);\r\n\r\n      let tiltX = (\r\n        this.reverse *\r\n        (this.settings.max - x * this.settings.max * 2)\r\n      ).toFixed(2);\r\n      let tiltY = (\r\n        this.reverse *\r\n        (y * this.settings.max * 2 - this.settings.max)\r\n      ).toFixed(2);\r\n      let angle =\r\n        Math.atan2(\r\n          this.event.clientX - (this.left + this.width / 2),\r\n          -(this.event.clientY - (this.top + this.height / 2))\r\n        ) *\r\n        (180 / Math.PI);\r\n\r\n      return {\r\n        tiltX: tiltX,\r\n        tiltY: tiltY,\r\n        percentageX: x * 100,\r\n        percentageY: y * 100,\r\n        angle: angle,\r\n      };\r\n    }\r\n\r\n    updateElementPosition() {\r\n      let rect = this.element.getBoundingClientRect();\r\n\r\n      this.width = this.element.offsetWidth;\r\n      this.height = this.element.offsetHeight;\r\n      this.left = rect.left;\r\n      this.top = rect.top;\r\n    }\r\n\r\n    update() {\r\n      let values = this.getValues();\r\n\r\n      this.element.style.transform =\r\n        \"perspective(\" +\r\n        this.settings.perspective +\r\n        \"px) \" +\r\n        \"rotateX(\" +\r\n        (this.settings.axis === \"x\" ? 0 : values.tiltY) +\r\n        \"deg) \" +\r\n        \"rotateY(\" +\r\n        (this.settings.axis === \"y\" ? 0 : values.tiltX) +\r\n        \"deg) \" +\r\n        \"scale3d(\" +\r\n        this.settings.scale +\r\n        \", \" +\r\n        this.settings.scale +\r\n        \", \" +\r\n        this.settings.scale +\r\n        \")\";\r\n\r\n      if (this.glare) {\r\n        this.glareElement.style.transform = `rotate(${values.angle}deg) translate(-50%, -50%)`;\r\n        this.glareElement.style.opacity = `${\r\n          (values.percentageY * this.settings[\"max-glare\"]) / 100\r\n        }`;\r\n      }\r\n\r\n      this.element.dispatchEvent(\r\n        new CustomEvent(\"tiltChange\", {\r\n          detail: values,\r\n        })\r\n      );\r\n\r\n      this.updateCall = null;\r\n    }\r\n\r\n    /**\r\n     * Appends the glare element (if glarePrerender equals false)\r\n     * and sets the default style\r\n     */\r\n    prepareGlare() {\r\n      // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\r\n      if (!this.glarePrerender) {\r\n        // Create glare element\r\n        const jsTiltGlare = document.createElement(\"div\");\r\n        jsTiltGlare.classList.add(\"js-tilt-glare\");\r\n\r\n        const jsTiltGlareInner = document.createElement(\"div\");\r\n        jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\r\n\r\n        jsTiltGlare.appendChild(jsTiltGlareInner);\r\n        this.element.appendChild(jsTiltGlare);\r\n      }\r\n\r\n      this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\r\n      this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\r\n\r\n      if (this.glarePrerender) {\r\n        return;\r\n      }\r\n\r\n      Object.assign(this.glareElementWrapper.style, {\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        \"pointer-events\": \"none\",\r\n      });\r\n\r\n      Object.assign(this.glareElement.style, {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        \"pointer-events\": \"none\",\r\n        \"background-image\": `linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)`,\r\n        transform: \"rotate(180deg) translate(-50%, -50%)\",\r\n        \"transform-origin\": \"0% 0%\",\r\n        opacity: \"0\",\r\n      });\r\n\r\n      this.updateGlareSize();\r\n    }\r\n\r\n    updateGlareSize() {\r\n      if (this.glare) {\r\n        const glareSize =\r\n          (this.element.offsetWidth > this.element.offsetHeight\r\n            ? this.element.offsetWidth\r\n            : this.element.offsetHeight) * 2;\r\n\r\n        Object.assign(this.glareElement.style, {\r\n          width: `${glareSize}px`,\r\n          height: `${glareSize}px`,\r\n        });\r\n      }\r\n    }\r\n\r\n    updateClientSize() {\r\n      this.clientWidth =\r\n        window.innerWidth ||\r\n        document.documentElement.clientWidth ||\r\n        document.body.clientWidth;\r\n\r\n      this.clientHeight =\r\n        window.innerHeight ||\r\n        document.documentElement.clientHeight ||\r\n        document.body.clientHeight;\r\n    }\r\n\r\n    onWindowResize() {\r\n      this.updateGlareSize();\r\n      this.updateClientSize();\r\n    }\r\n\r\n    setTransition() {\r\n      clearTimeout(this.transitionTimeout);\r\n      this.element.style.transition =\r\n        this.settings.speed + \"ms \" + this.settings.easing;\r\n      if (this.glare)\r\n        this.glareElement.style.transition = `opacity ${this.settings.speed}ms ${this.settings.easing}`;\r\n\r\n      this.transitionTimeout = setTimeout(() => {\r\n        this.element.style.transition = \"\";\r\n        if (this.glare) {\r\n          this.glareElement.style.transition = \"\";\r\n        }\r\n      }, this.settings.speed);\r\n    }\r\n\r\n    /**\r\n     * Method return patched settings of instance\r\n     * @param {boolean} settings.reverse - reverse the tilt direction\r\n     * @param {number} settings.max - max tilt rotation (degrees)\r\n     * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\r\n     * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\r\n     * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\r\n     * @param {string} settings.easing - Easing on enter/exit\r\n     * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\r\n     * @param {number} settings.speed - Speed of the enter/exit transition\r\n     * @param {boolean} settings.transition - Set a transition on enter/exit\r\n     * @param {string|null} settings.axis - What axis should be disabled. Can be X or Y\r\n     * @param {boolean} settings.glare - What axis should be disabled. Can be X or Y\r\n     * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n     * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\r\n     * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\r\n     * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\r\n     * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\r\n     * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\r\n     * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\r\n     * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\r\n     */\r\n    extendSettings(settings) {\r\n      let defaultSettings = {\r\n        reverse: false,\r\n        max: 15,\r\n        startX: 0,\r\n        startY: 0,\r\n        perspective: 1000,\r\n        easing: \"cubic-bezier(.03,.98,.52,.99)\",\r\n        scale: 1,\r\n        speed: 300,\r\n        transition: true,\r\n        axis: null,\r\n        glare: false,\r\n        \"max-glare\": 1,\r\n        \"glare-prerender\": false,\r\n        \"full-page-listening\": false,\r\n        \"mouse-event-element\": null,\r\n        reset: true,\r\n        gyroscope: true,\r\n        gyroscopeMinAngleX: -45,\r\n        gyroscopeMaxAngleX: 45,\r\n        gyroscopeMinAngleY: -45,\r\n        gyroscopeMaxAngleY: 45,\r\n        gyroscopeSamples: 10,\r\n      };\r\n\r\n      let newSettings = {};\r\n      for (var property in defaultSettings) {\r\n        if (property in settings) {\r\n          newSettings[property] = settings[property];\r\n        } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\r\n          let attribute = this.element.getAttribute(\"data-tilt-\" + property);\r\n          try {\r\n            newSettings[property] = JSON.parse(attribute);\r\n          } catch (e) {\r\n            newSettings[property] = attribute;\r\n          }\r\n        } else {\r\n          newSettings[property] = defaultSettings[property];\r\n        }\r\n      }\r\n\r\n      return newSettings;\r\n    }\r\n\r\n    static init(elements, settings) {\r\n      if (elements instanceof Node) {\r\n        elements = [elements];\r\n      }\r\n\r\n      if (elements instanceof NodeList) {\r\n        elements = [].slice.call(elements);\r\n      }\r\n\r\n      if (!(elements instanceof Array)) {\r\n        return;\r\n      }\r\n\r\n      elements.forEach((element) => {\r\n        if (!(\"vanillaTilt\" in element)) {\r\n          element.vanillaTilt = new VanillaTilt(element, settings);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  if (typeof document !== \"undefined\") {\r\n    /* expose the class to window */\r\n    window.VanillaTilt = VanillaTilt;\r\n\r\n    /**\r\n     * Auto load\r\n     */\r\n    VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\r\n  }\r\n\r\n  return VanillaTilt;\r\n})();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}