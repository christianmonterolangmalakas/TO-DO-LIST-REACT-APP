{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\OneDrive\\\\Documents\\\\project\\\\.vscode\\\\vite-project\\\\myreactapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { AiOutlinePlus, AiOutlineClose, AiOutlineEdit } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    // Fetch initial tasks from API or local storage (replace with your logic)\n    fetch(\"/api/tasks\").then(response => response.json()).then(data => setTasks(data));\n  }, []);\n  const handleCreateTask = task => {\n    // Add new task to state and API (replace with your logic)\n    setTasks([...tasks, task]);\n    fetch(\"/api/tasks\", {\n      method: \"POST\",\n      body: JSON.stringify(task)\n    });\n  };\n  const handleDeleteTask = id => {\n    // Filter out deleted task from state and API (replace with your logic)\n    setTasks(tasks.filter(task => task.id !== id));\n    fetch(`/api/tasks/${id}`, {\n      method: \"DELETE\"\n    });\n  };\n  const handleUpdateTask = (id, updatedTask) => {\n    // Update specific task in state and API (replace with your logic)\n    const updatedTasks = tasks.map(task => task.id === id ? updatedTask : task);\n    setTasks(updatedTasks);\n    fetch(`/api/tasks/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updatedTask)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          children: /*#__PURE__*/_jsxDEV(AiOutlineClose, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateTask(task.id, {\n            ...task,\n            completed: !task.completed\n          }),\n          children: task.completed ? \"Mark incomplete\" : \"Mark complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditTask(task.id),\n          children: /*#__PURE__*/_jsxDEV(AiOutlineEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n// Add your Create Task form component and Edit Task functionality implementation\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AiOutlinePlus","AiOutlineClose","AiOutlineEdit","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetch","then","response","json","data","handleCreateTask","task","method","body","JSON","stringify","handleDeleteTask","id","filter","handleUpdateTask","updatedTask","updatedTasks","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","completed","handleEditTask","_c","$RefreshReg$"],"sources":["C:/Users/roger/OneDrive/Documents/project/.vscode/vite-project/myreactapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { AiOutlinePlus, AiOutlineClose, AiOutlineEdit } from \"react-icons/ai\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    // Fetch initial tasks from API or local storage (replace with your logic)\n    fetch(\"/api/tasks\")\n      .then((response) => response.json())\n      .then((data) => setTasks(data));\n  }, []);\n\n  const handleCreateTask = (task) => {\n    // Add new task to state and API (replace with your logic)\n    setTasks([...tasks, task]);\n    fetch(\"/api/tasks\", {\n      method: \"POST\",\n      body: JSON.stringify(task),\n    });\n  };\n\n  const handleDeleteTask = (id) => {\n    // Filter out deleted task from state and API (replace with your logic)\n    setTasks(tasks.filter((task) => task.id !== id));\n    fetch(`/api/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n  };\n\n  const handleUpdateTask = (id, updatedTask) => {\n    // Update specific task in state and API (replace with your logic)\n    const updatedTasks = tasks.map((task) =>\n      task.id === id ? updatedTask : task\n    );\n    setTasks(updatedTasks);\n    fetch(`/api/tasks/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updatedTask),\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>To-Do List</h1>\n      <ul>\n        {tasks.map((task) => (\n          <li key={task.id}>\n            <span>{task.title}</span>\n            <button onClick={() => handleDeleteTask(task.id)}>\n              <AiOutlineClose />\n            </button>\n            <button\n              onClick={() =>\n                handleUpdateTask(task.id, {\n                  ...task,\n                  completed: !task.completed,\n                })\n              }\n            >\n              {task.completed ? \"Mark incomplete\" : \"Mark complete\"}\n            </button>\n            <button onClick={() => handleEditTask(task.id)}>\n              <AiOutlineEdit />\n            </button>\n          </li>\n        ))}\n      </ul>\n      {/* Add your Create Task form component here */}\n    </div>\n  );\n}\n\n// Add your Create Task form component and Edit Task functionality implementation\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}